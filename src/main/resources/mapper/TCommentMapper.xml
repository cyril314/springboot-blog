<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.dao.TCommentDao">
  <resultMap id="BaseResultMap" type="com.fit.entity.TComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userIp" jdbcType="VARCHAR" property="userip" />
    <result column="blogId" jdbcType="INTEGER" property="blogid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="commentDate" jdbcType="TIMESTAMP" property="commentdate" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userIp, blogId, content, commentDate, `state`
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from t_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="save" keyProperty="id" parameterType="com.fit.entity.TComment" useGeneratedKeys="true">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userip != null">
        userIp,
      </if>
      <if test="blogid != null">
        blogId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commentdate != null">
        commentDate,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userip != null">
        #{userip,jdbcType=VARCHAR},
      </if>
      <if test="blogid != null">
        #{blogid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentdate != null">
        #{commentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.fit.entity.TComment">
    update t_comment
    <set>
      <if test="userip != null">
        userIp = #{userip,jdbcType=VARCHAR},
      </if>
      <if test="blogid != null">
        blogId = #{blogid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentdate != null">
        commentDate = #{commentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Base_Where_List">
    <where>
      <if test="userip != null and userip != ''">
         and userIp = #{userip,jdbcType=VARCHAR}
      </if>
      <if test="blogid != null and blogid != ''">
         and blogId = #{blogid,jdbcType=INTEGER}
      </if>
      <if test="content != null and content != ''">
         and content = #{content,jdbcType=VARCHAR}
      </if>
      <if test="commentdate != null and commentdate != ''">
         and commentDate = #{commentdate,jdbcType=TIMESTAMP}
      </if>
      <if test="state != null and state != ''">
         and `state` = #{state,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  <select id="findList" parameterType="com.fit.entity.TComment" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from t_comment
    <include refid="Base_Where_List" />
    order by id desc 
	<if test="offset != null and limit != null">
	limit ${offset}, ${limit}
	</if>
  </select>
  <select id="findCount" resultType="java.lang.Integer">
    select count(1) from t_comment
    <include refid="Base_Where_List" />
  </select>
  <select id="get" parameterType="java.util.Map" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from t_comment
     <include refid="Base_Where_List" />
  </select>
  <delete id="batchDelete">
    delete from t_comment
     where id in (
     <foreach collection="array" item="id" separator=",">
     #{id}
     </foreach>
    )
  </delete>
</mapper>